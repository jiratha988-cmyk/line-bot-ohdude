from flask import Flask, request, abort
from linebot import LineBotApi, WebhookHandler
from linebot.exceptions import InvalidSignatureError
from linebot.models import (
    MessageEvent, TextMessage, TextSendMessage,
    JoinEvent, LeaveEvent
)
import os
import re

app = Flask(__name__)

line_bot_api = LineBotApi(os.getenv("LINE_CHANNEL_ACCESS_TOKEN"))
handler = WebhookHandler(os.getenv("LINE_CHANNEL_SECRET"))

@app.route("/")
def index():
    return "Bot is running"

@app.route("/callback", methods=["POST"])
def callback():
    signature = request.headers["X-Line-Signature"]
    body = request.get_data(as_text=True)

    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        abort(400)

    return "OK"

# ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏Å‡∏é
@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    msg = event.message.text
    user_id = event.source.user_id

    # ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
    forbidden_link = re.search(r"(http|https):\/\/", msg)
    # ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏•‡∏ô‡πå
    line_link = re.search(r"(line\.me|line\.me\/R|@|\/ti\/|\/qr)", msg)
    # QR code (‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ß‡πà‡∏≤ QR ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ô‡∏ß‡πÜ ‡∏ô‡∏µ‡πâ)
    qr_hint = re.search(r"QR", msg, re.IGNORECASE)
    # ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô "Ohshop" ‡πÉ‡∏´‡πâ‡∏ú‡πà‡∏≤‡∏ô
    allowed_shop = re.search(r"ohshop", msg, re.IGNORECASE)

    if (forbidden_link or line_link or qr_hint) and not allowed_shop:
        warning_text = "üö´ ‡∏´‡πâ‡∏≤‡∏°‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏£‡πâ‡∏≤‡∏ô Ohshop"
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=warning_text))
        return

# ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏Ñ‡∏£‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà
@handler.add(JoinEvent)
def handle_join(event):
    text = "‚ùóÔ∏è‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏≠‡∏ó‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°\n‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏° ‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ"
    line_bot_api.reply_message(event.reply_token, TextSendMessage(text=text))

@handler.add(LeaveEvent)
def handle_leave(event):
    # ‡∏Å‡∏£‡∏ì‡∏µ‡∏ö‡∏≠‡∏ó‡πÇ‡∏î‡∏ô‡πÄ‡∏ï‡∏∞‡∏≠‡∏≠‡∏Å ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ
    pass

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
