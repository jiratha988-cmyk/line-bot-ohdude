from flask import Flask, request, abort
from linebot.v3 import WebhookHandler
from linebot.v3.messaging import MessagingApi, ReplyMessageRequest, TextMessage
from linebot.v3.webhooks import (
    MessageEvent, TextMessageContent,
    MemberLeftEvent, JoinEvent, LeaveEvent,
    GroupNameUpdateEvent
)
from linebot.v3.exceptions import InvalidSignatureError
import os
import re

app = Flask(__name__)

# ====== ‡πÉ‡∏™‡πà Token ‡πÅ‡∏•‡∏∞ Secret ‡∏à‡∏≤‡∏Å LINE Developer Console ======
channel_access_token = os.getenv("LINE_CHANNEL_ACCESS_TOKEN")
channel_secret = os.getenv("LINE_CHANNEL_SECRET")

handler = WebhookHandler(channel_secret)
line_bot_api = MessagingApi(channel_access_token)

# === ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ===
ORIGINAL_GROUP_NAME = "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤Oh!dudeVip"
ALLOWED_LINE_DOMAIN = "ohshop"  # ‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÅ‡∏ä‡∏£‡πå link ‡πÑ‡∏î‡πâ

@app.route("/", methods=["GET"])
def home():
    return "LINE Bot is running!"

@app.route("/callback", methods=["POST"])
def callback():
    signature = request.headers.get("X-Line-Signature", "")
    body = request.get_data(as_text=True)
    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        abort(400)
    return "OK"

# ================== Event: ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° =====================
@handler.add(MessageEvent)
def handle_message(event):
    if isinstance(event.message, TextMessageContent):
        text = event.message.text.lower()

        # üîí Block ‡∏•‡∏¥‡∏á‡∏Å‡πå LINE ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ç‡∏≠‡∏á‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå
        if "line.me" in text and ALLOWED_LINE_DOMAIN not in text:
            line_bot_api.reply_message(
                ReplyMessageRequest(
                    reply_token=event.reply_token,
                    messages=[TextMessage(text="‚ùå ‡∏´‡πâ‡∏≤‡∏°‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏•‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ç‡∏≠‡∏á‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ")]
                )
            )
            return

        # ‚úÖ Echo ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏•‡∏±‡∏ö
        line_bot_api.reply_message(
            ReplyMessageRequest(
                reply_token=event.reply_token,
                messages=[TextMessage(text="‡∏Ñ‡∏∏‡∏ì‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ß‡πà‡∏≤: " + event.message.text)]
            )
        )

# ================== Event: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏° =====================
@handler.add(GroupNameUpdateEvent)
def handle_group_rename(event):
    new_name = event.group_name
    if new_name != ORIGINAL_GROUP_NAME:
        # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö
        line_bot_api.reply_message(
            ReplyMessageRequest(
                reply_token=event.reply_token,
                messages=[TextMessage(text=f"‚ö†Ô∏è ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô '{new_name}'\n‡∏Ç‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô '{ORIGINAL_GROUP_NAME}' ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö")]
            )
        )
        # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö (‡πÅ‡∏ï‡πà‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ LINE ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ bot ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠ group ‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ token ‡∏û‡∏¥‡πÄ‡∏®‡∏©)
        # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå admin ‡πÅ‡∏•‡∏∞ API ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö ‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ MessagingApi().update_group_name(group_id, name)

# ================== Event: ‡∏°‡∏µ‡∏Ñ‡∏ô‡πÇ‡∏î‡∏ô‡πÄ‡∏ï‡∏∞‡∏≠‡∏≠‡∏Å =====================
@handler.add(MemberLeftEvent)
def handle_member_left(event):
    line_bot_api.reply_message(
        ReplyMessageRequest(
            reply_token=event.reply_token,
            messages=[TextMessage(text="üëã ‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏∞‡∏≠‡∏≠‡∏Å")]
        )
    )

# ================== Event: Bot ‡∏ñ‡∏π‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏° =====================
@handler.add(JoinEvent)
def handle_join(event):
    line_bot_api.reply_message(
        ReplyMessageRequest(
            reply_token=event.reply_token,
            messages=[TextMessage(text="‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏ú‡∏°‡∏Ñ‡∏∑‡∏≠ Oh!dude Bot üòé")]
        )
    )

# =========== Main ============
if __name__ == "__main__":
    app.run(port=5000)
