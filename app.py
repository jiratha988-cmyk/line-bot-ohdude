from flask import Flask, request, abort
from linebot.v3 import WebhookHandler
from linebot.v3.messaging import (
    Configuration, MessagingApi, ReplyMessageRequest, TextMessage, LeaveGroupRequest, DeleteMessageRequest
)
from linebot.v3.webhooks import (
    MessageEvent, TextMessageContent, JoinEvent,
    MemberLeftEvent, MemberJoinedEvent,
    LeaveEvent, PostbackEvent, ThingsEvent,
    UnsendEvent, FollowEvent, UnfollowEvent,
    BeaconEvent, AccountLinkEvent, VideoPlayCompleteEvent,
    BotJoinedEvent, BotLeaveEvent, MemberLeftEvent, GroupNameChangeEvent
)
from linebot.v3.exceptions import InvalidSignatureError
import os
import re

app = Flask(__name__)

# ‡πÇ‡∏´‡∏•‡∏î token ‡∏à‡∏≤‡∏Å environment
channel_access_token = os.getenv("LINE_CHANNEL_ACCESS_TOKEN")
channel_secret = os.getenv("LINE_CHANNEL_SECRET")

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏•‡∏ô‡πå SDK
config = Configuration(access_token=channel_access_token)
line_bot_api = MessagingApi(config)
handler = WebhookHandler(channel_secret)

# üü¢ ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏ß‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
ORIGINAL_GROUP_NAME = "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤Oh!dudeVip (6)"

@app.route("/", methods=["GET"])
def home():
    return "LINE Bot is running!"

@app.route("/callback", methods=["POST"])
def callback():
    signature = request.headers["X-Line-Signature"]
    body = request.get_data(as_text=True)

    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        abort(400)

    return "OK"

# ‚úÖ ‡∏ï‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
@handler.add(MessageEvent, message=TextMessageContent)
def handle_message(event):
    text = event.message.text
    user_id = event.source.user_id
    group_id = event.source.group_id if event.source.type == "group" else None

    print(f"üî• ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: {text}")

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå LINE ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ç‡∏≠‡∏á ohshop
    line_link = re.findall(r"(https?://line\.me/[^\s]+)", text)
    if line_link:
        if not any("ohshop" in link for link in line_link):
            # ‚ùå ‡πÄ‡∏ï‡∏∞‡∏≠‡∏≠‡∏Å (optional) ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏Ñ‡πà‡∏•‡∏ö
            # line_bot_api.leave_group(group_id)  # ‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏≠‡∏á kick ‡∏≠‡∏≠‡∏Å‡∏ñ‡πâ‡∏≤‡∏°‡∏µ permission
            try:
                line_bot_api.delete_message(DeleteMessageRequest(message_id=event.message.id))
                reply = TextMessage(text="‚ùå ‡∏´‡πâ‡∏≤‡∏°‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå LINE ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ç‡∏≠‡∏á Ohshop!")
                line_bot_api.reply_message(ReplyMessageRequest(
                    reply_token=event.reply_token,
                    messages=[reply]
                ))
            except Exception as e:
                print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ:", e)
            return

    reply = TextMessage(text=f"‡∏Ñ‡∏∏‡∏ì‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ß‡πà‡∏≤: {text}")
    line_bot_api.reply_message(ReplyMessageRequest(
        reply_token=event.reply_token,
        messages=[reply]
    ))

# ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°
@handler.add(GroupNameChangeEvent)
def handle_group_name_change(event):
    group_id = event.source.group_id
    new_name = event.event.group_name
    if new_name != ORIGINAL_GROUP_NAME:
        warning = TextMessage(text=f"‚ö†Ô∏è ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô \"{new_name}\"")
        restore = TextMessage(text=f"üîÑ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô \"{ORIGINAL_GROUP_NAME}\" ‡πÅ‡∏•‡πâ‡∏ß‡∏à‡πâ‡∏≤")
        try:
            line_bot_api.set_group_name(group_id, ORIGINAL_GROUP_NAME)
        except Exception as e:
            print("‚ùå ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ:", e)
        line_bot_api.reply_message(ReplyMessageRequest(
            reply_token=event.reply_token,
            messages=[warning, restore]
        ))

# ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏ô‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏∞‡∏≠‡∏≠‡∏Å
@handler.add(MemberLeftEvent)
def handle_member_left(event):
    for member in event.left.members:
        user_id = member.user_id
        message = TextMessage(text=f"üëã ‡∏°‡∏µ‡∏Ñ‡∏ô‡πÇ‡∏î‡∏ô‡πÄ‡∏ï‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°: {user_id}")
        line_bot_api.reply_message(ReplyMessageRequest(
            reply_token=event.reply_token,
            messages=[message]
        ))

# ‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
@handler.add(JoinEvent)
def handle_join(event):
    message = TextMessage(text="üëã ‡∏ö‡∏≠‡∏ó‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡∏à‡πâ‡∏≤! ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ä‡πà‡∏ß‡∏¢‡∏î‡∏π‡πÅ‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ")
    line_bot_api.reply_message(ReplyMessageRequest(
        reply_token=event.reply_token,
        messages=[message]
    ))
